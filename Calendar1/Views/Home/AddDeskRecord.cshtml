@model Calendar1.Models.EmployeeDesk

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_CalendarLayout.cshtml";
}

<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <!-- Tell the browser to be responsive to screen width -->
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <!-- Font Awesome -->
    <link rel="stylesheet" href="~/Css/plugins/fontawesome-free/css/all.min.css">
    <!-- Ionicons -->
    <link rel="stylesheet" href="https://code.ionicframework.com/ionicons/2.0.1/css/ionicons.min.css">
    <!-- fullCalendar -->
    <link rel="stylesheet" href="~/Css/plugins/fullcalendar/main.min.css">
    <link rel="stylesheet" href="~/Css/plugins/fullcalendar-daygrid/main.min.css">
    <link rel="stylesheet" href="~/Css/plugins/fullcalendar-timegrid/main.min.css">
    <link rel="stylesheet" href="~/Css/plugins/fullcalendar-bootstrap/main.min.css">
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css">
    <!-- Theme style -->
    <link rel="stylesheet" href="~/Css/dist/css/adminlte.min.css">
    <!-- Google Font: Source Sans Pro -->
    <link href="https://fonts.googleapis.com/css?family=Source+Sans+Pro:300,400,400i,700" rel="stylesheet">
</head>
<body class="hold-transition sidebar-mini">
    <section class="content">
        <div class="container-fluid">
            <div class="row">
                <div class="col-md-3">
                    <div class="sticky-top mb-3">
                        <div class="card">
                            <div class="card-header">
                                <h4 class="card-title">Çalışanlar</h4>
                            </div>
                            <div class="card-body">
                                <!-- the events -->
                                <div id="external-events">
                                    @foreach (var employee in Model.Employees)
                                    {
                                        var color = (employee.Team == "Dijital Uygulama") ? "bg-danger" : "bg-primary";
                                        <div class="external-event @color" data-employee="@employee.Name" data-team="@employee.Team">@employee.Name</div>
                                    }
                                </div>
                            </div>
                            <!-- /.card-body -->
                        </div>
                        <!-- /.card -->
                        <div class="card">
                            @using (Html.BeginForm("AssignDesks", "Home", FormMethod.Post, new { id = "assignDesksForm" }))
                            {
                                <select id="selectedMonthDropdown" name="selectedMonth" class="form-control">
                                    @for (int i = 1; i <= 12; i++)
                                    {
                                        bool isSelected = (Session["SelectedMonth"] != null && (int)Session["SelectedMonth"] == i);
                                        <option value="@i" @(isSelected ? "selected" : "")>@System.Globalization.CultureInfo.CurrentCulture.DateTimeFormat.GetMonthName(i)</option>
                                    }
                                </select>

                                <button type="submit" class="btn btn-block btn-default btn-lg">Otomatik Yerleştir</button>
                            }

                            @using (Html.BeginForm("Delete", "Home", FormMethod.Post, new { id = "deleteForm" }))
                            {
                                <input type="hidden" id="deleteSelectedMonth" name="selectedMonth" value="@Session["SelectedMonth"]" />

                                <button type="submit" class="btn btn-block btn-danger btn-lg">Tüm Ayı Sil</button>
                            }
                        </div>

                        <script type="text/javascript">
                            document.getElementById("selectedMonthDropdown").addEventListener("change", function () {
                                var selectedMonth = this.value;
                                document.getElementById("deleteSelectedMonth").value = selectedMonth;
                            });
                        </script>
                    </div>
                </div>
                <!-- /.col -->
                <div class="col-md-9">
                    <div class="card card-primary">
                        <div class="card-body p-0">
                            <!-- THE CALENDAR -->
                            <div id="calendar"></div>
                        </div>
                        <!-- /.card-body -->
                    </div>
                    <!-- /.card -->
                </div>
                <!-- /.col -->
            </div>
            <!-- /.row -->
        </div><!-- /.container-fluid -->
    </section>

    <div class="modal fade" id="deleteEventModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="deleteEventLabel">Kayıt Sil</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    Kayıt silinsin mi?
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Hayır</button>
                    <button type="button" class="btn btn-primary" id="confirmDelete">Evet</button>
                </div>
            </div>
        </div>
    </div>

    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js"></script>
    <!-- fullCalendar 2.2.5 -->
    <script src="~/Css/plugins/moment/moment.min.js"></script>
    <script src="~/Css/plugins/fullcalendar/main.min.js"></script>
    <script src="~/Css/plugins/fullcalendar-daygrid/main.min.js"></script>
    <script src="~/Css/plugins/fullcalendar-timegrid/main.min.js"></script>
    <script src="~/Css/plugins/fullcalendar-interaction/main.min.js"></script>
    <script src="~/Css/plugins/fullcalendar-bootstrap/main.min.js"></script>
    <!-- Page specific script -->
    <script>
        $(function () {

            // Takımlar için renk tanımlamaları
            var teamColors = {
                "Dijital Uygulama": "#dc3545",  // Kırmızı
                "Bankacılık": "#007bff"   // Mavi
            };

            /* initialize the external events
             -----------------------------------------------------------------*/
            function ini_events(ele) {
                ele.each(function () {
                    var eventObject = {
                        title: $.trim($(this).data('employee'))
                    }
                    $(this).data('eventObject', eventObject)

                    $(this).draggable({
                        zIndex: 1070,
                        revert: true,
                        revertDuration: 0
                    })
                })
            }

            ini_events($('#external-events div.external-event'))

            /* initialize the calendar
             -----------------------------------------------------------------*/
            //Date for the calendar events (dummy data)
            var date = new Date()
            var d = date.getDate(),
                m = date.getMonth(),
                y = date.getFullYear()

            var Calendar = FullCalendar.Calendar;
            var Draggable = FullCalendarInteraction.Draggable;

            var containerEl = document.getElementById('external-events');
            var checkbox = document.getElementById('drop-remove');
            var calendarEl = document.getElementById('calendar');

            // Son ziyaret edilen ayı localStorage'dan alın
            var lastViewedMonth = localStorage.getItem('lastViewedMonth') || new Date().toISOString().slice(0, 7);

            console.log('Son ziyaret edilen ay:', lastViewedMonth);

            // initialize the external events
            // -----------------------------------------------------------------

            new Draggable(containerEl, {
                itemSelector: '.external-event',
                eventData: function (eventEl) {
                    console.log(eventEl);
                    return {
                        title: eventEl.innerText,
                        backgroundColor: window.getComputedStyle(eventEl, null).getPropertyValue('background-color'),
                        borderColor: window.getComputedStyle(eventEl, null).getPropertyValue('background-color'),
                        textColor: window.getComputedStyle(eventEl, null).getPropertyValue('color'),
                        
                    };
                }
            });

            var calendar = new Calendar(calendarEl, {
                plugins: ['bootstrap', 'interaction', 'dayGrid', 'timeGrid'],
                // Takvimin başlangıç tarihini ayarlayın
                initialDate: lastViewedMonth ? lastViewedMonth : new Date(),
                datesSet: function (dateInfo) {
                    console.log('datesSet çalıştı, ay:', dateInfo.startStr);
                    // Son ziyaret edilen ayı localStorage'a kaydedin
                    localStorage.setItem('lastViewedMonth', dateInfo.startStr);
                },
                header: {
                    left: 'prev,next today',
                    center: 'title',
                    right: 'dayGridMonth,timeGridWeek,timeGridDay'
                },
                'themeSystem': 'bootstrap',
                //Random default events
                events: function(fetchInfo, successCallback, failureCallback) {
    $.ajax({
        url: '@Url.Action("GetEvents", "Home")',
        method: 'GET',
        success: function(data) {
            var events = [];
            for(var i = 0; i < data.length; i++) {
                var eventData = data[i];
                var team = eventData.team;
                var color = teamColors[team] || "#000000"; // Fallback to black if no color is defined
                events.push({
                    title: eventData.title,
                    start: eventData.start,
                    end: eventData.end,
                    color: color,
                    team: team // Ensure team data is correctly set
                });

            }
            successCallback(events);
        },
        error: function() {
            failureCallback();
        }
    });
                },

    eventClick: function(info) {
    // Modal penceresini göster
    $('#deleteEventModal').modal('show');

    // "Evet" düğmesine tıklanırsa
    $('#confirmDelete').off('click').on('click', function() {
        // Olayı silmek için sunucu tarafına bir istekte bulunun
       
        var team = info.event.extendedProps.team;
        if (team) {
            console.log("Takım Bilgisi: ", team);
        } else {
            console.log("Takım bilgisi bulunamadı!");
        }

        $.ajax({
            url: '@Url.Action("DeleteEventInExcel", "Home")',
            type: 'POST',
            data: {
                title: info.event.title,
                start: info.event.start.toISOString(),
                end: info.event.end ? info.event.end.toISOString() : info.event.start.toISOString(),
                team: info.event.extendedProps.team
            },
            
            success: function(response) {
                if (response.success) {
                    info.event.remove(); // FullCalendar'da olayı sil
                    $('#deleteEventModal').modal('hide'); // Modal penceresini gizle
                } else {
                    alert('Bir hata oluştu.');
                }
            }
        });
    });
},

                editable: true,
                droppable: true, // this allows things to be dropped onto the calendar !!!
                drop: function (info) {
    console.log("Etkinlik sürüklenip bırakıldı!");

    // Dışarıdan sürüklenen öğenin bilgilerine erişim
    var draggedElement = info.draggedEl;
    var eventTitle = $(draggedElement).data('employee');
    var eventTeam = $(draggedElement).data('team'); 
    var eventData = {
        title: eventTitle,  // Burada info.draggedEl.title yerine direkt eventTitle'ı kullanıyoruz.
        start: info.dateStr,  // Sürüklenip bırakılan tarihe erişim
        end: info.dateStr,  // Şimdilik başlangıçla aynı değeri atıyoruz
        team: eventTeam || 'Unknown'
    };

    $.ajax({
        url: '@Url.Action("UpdateEventInExcel", "Home")',
        type: 'POST',
        dataType: 'json',
        contentType: 'application/json',
        data: JSON.stringify(eventData),
        beforeSend: function () {
            console.log("Ajax isteği başlatıldı."); // Bu satırı ekledik.
        },
        success: function (response) {
            if (!response.success) {
                alert('Etkinlik güncellenirken bir hata oluştu.');
                // Başarısız olursa değişikliği geri al
            }
        },
        error: function () {
            alert('Etkinlik güncellenirken bir hata oluştu.');
            // Başarısız olursa değişikliği geri al
        }

    });
    // is the "remove after drop" checkbox checked?
}

            });

            var lastViewedMonth = localStorage.getItem('lastViewedMonth');
            if (lastViewedMonth) {
                calendar.gotoDate(lastViewedMonth); // Son ziyaret edilen aya git
            }

            calendar.render();ç
            // $('#calendar').fullCalendar()

            /* ADDING EVENTS */
            var currColor = '#3c8dbc' //Red by default
            //Color chooser button
            var colorChooser = $('#color-chooser-btn')
            $('#color-chooser > li > a').click(function (e) {
                e.preventDefault()
                //Save color
                currColor = $(this).css('color')
                //Add color effect to button
                $('#add-new-event').css({
                    'background-color': currColor,
                    'border-color': currColor
                })
            })
            $('#add-new-event').click(function (e) {
                e.preventDefault()
                //Get value and make sure it is not null
                var val = $('#new-event').val()
                if (val.length == 0) {
                    return
                }

                //Create events
                var event = $('<div />')
                event.css({
                    'background-color': currColor,
                    'border-color': currColor,
                    'color': '#fff'
                }).addClass('external-event')
                event.html(val)
                $('#external-events').prepend(event)

                //Add draggable funtionality
                ini_events(event)

                //Remove event from text input
                $('#new-event').val('')
            })
        })
    </script>
</body>
